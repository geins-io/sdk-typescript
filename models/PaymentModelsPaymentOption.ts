/* tslint:disable */
/* eslint-disable */
/**
 * Geins Management API
 *  Geins Management API is an RESTful api to power your applications who manages your geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip With this API, you can build custom applications and integrate with third-party systems, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API key`. You can create as many API keys as you need. Each `API key` is connected to a specific account so you can keep track of operations and manage keys. You can find your `API key` in the `geins merchant center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are supported:   - `API Key`   - `Basic Auth` 
 *
 * The version of the OpenAPI document: v1.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PaymentModelsPaymentOption
 */
export interface PaymentModelsPaymentOption {
    /**
     * 
     * @type {number}
     * @memberof PaymentModelsPaymentOption
     */
    paymentId?: number;
    /**
     * 
     * @type {number}
     * @memberof PaymentModelsPaymentOption
     */
    paymentGroupId?: number;
    /**
     * 
     * @type {string}
     * @memberof PaymentModelsPaymentOption
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof PaymentModelsPaymentOption
     */
    displayName?: string;
    /**
     * 
     * @type {number}
     * @memberof PaymentModelsPaymentOption
     */
    fee?: number;
    /**
     * 
     * @type {string}
     * @memberof PaymentModelsPaymentOption
     */
    icon?: string;
    /**
     * 
     * @type {number}
     * @memberof PaymentModelsPaymentOption
     */
    sort?: number;
    /**
     * 
     * @type {number}
     * @memberof PaymentModelsPaymentOption
     */
    period?: number;
    /**
     * 
     * @type {string}
     * @memberof PaymentModelsPaymentOption
     */
    termsLink?: string;
    /**
     * 
     * @type {string}
     * @memberof PaymentModelsPaymentOption
     */
    infoLink?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PaymentModelsPaymentOption
     */
    personalIdRequired?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PaymentModelsPaymentOption
     */
    registeredAddressRequired?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PaymentModelsPaymentOption
     */
    houseNumberRequired?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PaymentModelsPaymentOption
     */
    houseExtensionShown?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PaymentModelsPaymentOption
     */
    genderRequired?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PaymentModelsPaymentOption
     */
    birthdateRequired?: boolean;
}

/**
 * Check if a given object implements the PaymentModelsPaymentOption interface.
 */
export function instanceOfPaymentModelsPaymentOption(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PaymentModelsPaymentOptionFromJSON(json: any): PaymentModelsPaymentOption {
    return PaymentModelsPaymentOptionFromJSONTyped(json, false);
}

export function PaymentModelsPaymentOptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaymentModelsPaymentOption {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'paymentId': !exists(json, 'PaymentId') ? undefined : json['PaymentId'],
        'paymentGroupId': !exists(json, 'PaymentGroupId') ? undefined : json['PaymentGroupId'],
        'name': !exists(json, 'Name') ? undefined : json['Name'],
        'displayName': !exists(json, 'DisplayName') ? undefined : json['DisplayName'],
        'fee': !exists(json, 'Fee') ? undefined : json['Fee'],
        'icon': !exists(json, 'Icon') ? undefined : json['Icon'],
        'sort': !exists(json, 'Sort') ? undefined : json['Sort'],
        'period': !exists(json, 'Period') ? undefined : json['Period'],
        'termsLink': !exists(json, 'TermsLink') ? undefined : json['TermsLink'],
        'infoLink': !exists(json, 'InfoLink') ? undefined : json['InfoLink'],
        'personalIdRequired': !exists(json, 'PersonalIdRequired') ? undefined : json['PersonalIdRequired'],
        'registeredAddressRequired': !exists(json, 'RegisteredAddressRequired') ? undefined : json['RegisteredAddressRequired'],
        'houseNumberRequired': !exists(json, 'HouseNumberRequired') ? undefined : json['HouseNumberRequired'],
        'houseExtensionShown': !exists(json, 'HouseExtensionShown') ? undefined : json['HouseExtensionShown'],
        'genderRequired': !exists(json, 'GenderRequired') ? undefined : json['GenderRequired'],
        'birthdateRequired': !exists(json, 'BirthdateRequired') ? undefined : json['BirthdateRequired'],
    };
}

export function PaymentModelsPaymentOptionToJSON(value?: PaymentModelsPaymentOption | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'PaymentId': value.paymentId,
        'PaymentGroupId': value.paymentGroupId,
        'Name': value.name,
        'DisplayName': value.displayName,
        'Fee': value.fee,
        'Icon': value.icon,
        'Sort': value.sort,
        'Period': value.period,
        'TermsLink': value.termsLink,
        'InfoLink': value.infoLink,
        'PersonalIdRequired': value.personalIdRequired,
        'RegisteredAddressRequired': value.registeredAddressRequired,
        'HouseNumberRequired': value.houseNumberRequired,
        'HouseExtensionShown': value.houseExtensionShown,
        'GenderRequired': value.genderRequired,
        'BirthdateRequired': value.birthdateRequired,
    };
}

