/* tslint:disable */
/* eslint-disable */
/**
 * Geins Management API
 *  Geins Management API is an RESTful api to power your applications who manages your geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip With this API, you can build custom applications and integrate with third-party systems, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API key`. You can create as many API keys as you need. Each `API key` is connected to a specific account so you can keep track of operations and manage keys. You can find your `API key` in the `geins merchant center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are supported:   - `API Key`   - `Basic Auth` 
 *
 * The version of the OpenAPI document: v1.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A price for a product on a specific price list.
 * @export
 * @interface PriceListModelsReadPriceListPrice
 */
export interface PriceListModelsReadPriceListPrice {
    /**
     * The id of the product that this price applies to.
     * @type {number}
     * @memberof PriceListModelsReadPriceListPrice
     */
    productId?: number;
    /**
     * The id of the price list that this price is associated with.
     * @type {number}
     * @memberof PriceListModelsReadPriceListPrice
     */
    priceListId?: number;
    /**
     * The name of the price list that this price is associated with.
     * @type {string}
     * @memberof PriceListModelsReadPriceListPrice
     */
    priceListName?: string;
    /**
     * The price, inc VAT, in the currency of the associated price list.
     * @type {number}
     * @memberof PriceListModelsReadPriceListPrice
     */
    priceIncVat?: number;
    /**
     * The price, ex VAT, in the currency of the associated price list.
     * @type {number}
     * @memberof PriceListModelsReadPriceListPrice
     */
    priceExVat?: number;
    /**
     * The Vat Rate
     * @type {number}
     * @memberof PriceListModelsReadPriceListPrice
     */
    vatRate?: number;
    /**
     * The 2-letter ISO country code for this price.
     * @type {string}
     * @memberof PriceListModelsReadPriceListPrice
     */
    country?: string;
    /**
     * The 3-letter ISO 4217 currency code for this price.
     * @type {string}
     * @memberof PriceListModelsReadPriceListPrice
     */
    currency?: string;
    /**
     * Staggered count for this price. Defaults to 1.
     * @type {number}
     * @memberof PriceListModelsReadPriceListPrice
     */
    staggeredCount?: number;
    /**
     * The date the price is valid from.
     * @type {Date}
     * @memberof PriceListModelsReadPriceListPrice
     */
    validFrom?: Date;
    /**
     * The date the price is valid to.
     * @type {Date}
     * @memberof PriceListModelsReadPriceListPrice
     */
    validTo?: Date;
}

/**
 * Check if a given object implements the PriceListModelsReadPriceListPrice interface.
 */
export function instanceOfPriceListModelsReadPriceListPrice(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PriceListModelsReadPriceListPriceFromJSON(json: any): PriceListModelsReadPriceListPrice {
    return PriceListModelsReadPriceListPriceFromJSONTyped(json, false);
}

export function PriceListModelsReadPriceListPriceFromJSONTyped(json: any, ignoreDiscriminator: boolean): PriceListModelsReadPriceListPrice {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'productId': !exists(json, 'ProductId') ? undefined : json['ProductId'],
        'priceListId': !exists(json, 'PriceListId') ? undefined : json['PriceListId'],
        'priceListName': !exists(json, 'PriceListName') ? undefined : json['PriceListName'],
        'priceIncVat': !exists(json, 'PriceIncVat') ? undefined : json['PriceIncVat'],
        'priceExVat': !exists(json, 'PriceExVat') ? undefined : json['PriceExVat'],
        'vatRate': !exists(json, 'VatRate') ? undefined : json['VatRate'],
        'country': !exists(json, 'Country') ? undefined : json['Country'],
        'currency': !exists(json, 'Currency') ? undefined : json['Currency'],
        'staggeredCount': !exists(json, 'StaggeredCount') ? undefined : json['StaggeredCount'],
        'validFrom': !exists(json, 'ValidFrom') ? undefined : (new Date(json['ValidFrom'])),
        'validTo': !exists(json, 'ValidTo') ? undefined : (new Date(json['ValidTo'])),
    };
}

export function PriceListModelsReadPriceListPriceToJSON(value?: PriceListModelsReadPriceListPrice | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ProductId': value.productId,
        'PriceListId': value.priceListId,
        'PriceListName': value.priceListName,
        'PriceIncVat': value.priceIncVat,
        'PriceExVat': value.priceExVat,
        'VatRate': value.vatRate,
        'Country': value.country,
        'Currency': value.currency,
        'StaggeredCount': value.staggeredCount,
        'ValidFrom': value.validFrom === undefined ? undefined : (value.validFrom.toISOString()),
        'ValidTo': value.validTo === undefined ? undefined : (value.validTo.toISOString()),
    };
}

