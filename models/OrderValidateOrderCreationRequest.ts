/* tslint:disable */
/* eslint-disable */
/**
 * Geins Management API
 *  Geins Management API is an RESTful api to power your applications who manages your geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip With this API, you can build custom applications and integrate with third-party systems, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API key`. You can create as many API keys as you need. Each `API key` is connected to a specific account so you can keep track of operations and manage keys. You can find your `API key` in the `geins merchant center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are supported:   - `API Key`   - `Basic Auth` 
 *
 * The version of the OpenAPI document: v1.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { OrderValidateOrderCreationRequestStockItem } from './OrderValidateOrderCreationRequestStockItem';
import {
    OrderValidateOrderCreationRequestStockItemFromJSON,
    OrderValidateOrderCreationRequestStockItemFromJSONTyped,
    OrderValidateOrderCreationRequestStockItemToJSON,
} from './OrderValidateOrderCreationRequestStockItem';

/**
 * 
 * @export
 * @interface OrderValidateOrderCreationRequest
 */
export interface OrderValidateOrderCreationRequest {
    /**
     * 
     * @type {number}
     * @memberof OrderValidateOrderCreationRequest
     */
    orderId?: number;
    /**
     * 
     * @type {number}
     * @memberof OrderValidateOrderCreationRequest
     */
    userId?: number;
    /**
     * 
     * @type {string}
     * @memberof OrderValidateOrderCreationRequest
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderValidateOrderCreationRequest
     */
    phone?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderValidateOrderCreationRequest
     */
    currency?: string;
    /**
     * 
     * @type {number}
     * @memberof OrderValidateOrderCreationRequest
     */
    sumIncVat?: number;
    /**
     * 
     * @type {number}
     * @memberof OrderValidateOrderCreationRequest
     */
    balanceIncVat?: number;
    /**
     * 
     * @type {Array<OrderValidateOrderCreationRequestStockItem>}
     * @memberof OrderValidateOrderCreationRequest
     */
    items?: Array<OrderValidateOrderCreationRequestStockItem>;
}

/**
 * Check if a given object implements the OrderValidateOrderCreationRequest interface.
 */
export function instanceOfOrderValidateOrderCreationRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OrderValidateOrderCreationRequestFromJSON(json: any): OrderValidateOrderCreationRequest {
    return OrderValidateOrderCreationRequestFromJSONTyped(json, false);
}

export function OrderValidateOrderCreationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderValidateOrderCreationRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'orderId': !exists(json, 'OrderId') ? undefined : json['OrderId'],
        'userId': !exists(json, 'UserId') ? undefined : json['UserId'],
        'email': !exists(json, 'Email') ? undefined : json['Email'],
        'phone': !exists(json, 'Phone') ? undefined : json['Phone'],
        'currency': !exists(json, 'Currency') ? undefined : json['Currency'],
        'sumIncVat': !exists(json, 'SumIncVat') ? undefined : json['SumIncVat'],
        'balanceIncVat': !exists(json, 'BalanceIncVat') ? undefined : json['BalanceIncVat'],
        'items': !exists(json, 'Items') ? undefined : ((json['Items'] as Array<any>).map(OrderValidateOrderCreationRequestStockItemFromJSON)),
    };
}

export function OrderValidateOrderCreationRequestToJSON(value?: OrderValidateOrderCreationRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'OrderId': value.orderId,
        'UserId': value.userId,
        'Email': value.email,
        'Phone': value.phone,
        'Currency': value.currency,
        'SumIncVat': value.sumIncVat,
        'BalanceIncVat': value.balanceIncVat,
        'Items': value.items === undefined ? undefined : ((value.items as Array<any>).map(OrderValidateOrderCreationRequestStockItemToJSON)),
    };
}

