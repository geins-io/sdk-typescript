/* tslint:disable */
/* eslint-disable */
/**
 * Geins Management API
 *  Geins Management API is an RESTful api to power your applications who manages your geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip With this API, you can build custom applications and integrate with third-party systems, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API key`. You can create as many API keys as you need. Each `API key` is connected to a specific account so you can keep track of operations and manage keys. You can find your `API key` in the `geins merchant center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are supported:   - `API Key`   - `Basic Auth` 
 *
 * The version of the OpenAPI document: v1.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Data carrier for a shipping detail
 * @export
 * @interface OrderModelsShippingDetail
 */
export interface OrderModelsShippingDetail {
    /**
     * Unique identifier for this shipping detail
     * @type {number}
     * @memberof OrderModelsShippingDetail
     */
    id?: number;
    /**
     * Id of the sipping method
     * @type {number}
     * @memberof OrderModelsShippingDetail
     */
    shippingId?: number;
    /**
     * Name of the shipping method
     * @type {string}
     * @memberof OrderModelsShippingDetail
     */
    name?: string;
    /**
     * Parcel number (tracking number)
     * @type {string}
     * @memberof OrderModelsShippingDetail
     */
    parcelNumber?: string;
    /**
     * Shipping date
     * @type {Date}
     * @memberof OrderModelsShippingDetail
     */
    shippingDate?: Date;
    /**
     * Tracking URL
     * @type {string}
     * @memberof OrderModelsShippingDetail
     */
    trackingUrl?: string;
    /**
     * Delivery option id of the external shipping provider
     * @type {string}
     * @memberof OrderModelsShippingDetail
     */
    externalDeliveryOptionId?: string;
    /**
     * Service id of the external shipping provider
     * @type {string}
     * @memberof OrderModelsShippingDetail
     */
    externalServiceId?: string;
    /**
     * Carrier id of the external shipping provider
     * @type {string}
     * @memberof OrderModelsShippingDetail
     */
    externalCarrierId?: string;
    /**
     * Pickup point
     * @type {string}
     * @memberof OrderModelsShippingDetail
     */
    pickupPoint?: string;
}

/**
 * Check if a given object implements the OrderModelsShippingDetail interface.
 */
export function instanceOfOrderModelsShippingDetail(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OrderModelsShippingDetailFromJSON(json: any): OrderModelsShippingDetail {
    return OrderModelsShippingDetailFromJSONTyped(json, false);
}

export function OrderModelsShippingDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderModelsShippingDetail {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'Id') ? undefined : json['Id'],
        'shippingId': !exists(json, 'ShippingId') ? undefined : json['ShippingId'],
        'name': !exists(json, 'Name') ? undefined : json['Name'],
        'parcelNumber': !exists(json, 'ParcelNumber') ? undefined : json['ParcelNumber'],
        'shippingDate': !exists(json, 'ShippingDate') ? undefined : (new Date(json['ShippingDate'])),
        'trackingUrl': !exists(json, 'TrackingUrl') ? undefined : json['TrackingUrl'],
        'externalDeliveryOptionId': !exists(json, 'ExternalDeliveryOptionId') ? undefined : json['ExternalDeliveryOptionId'],
        'externalServiceId': !exists(json, 'ExternalServiceId') ? undefined : json['ExternalServiceId'],
        'externalCarrierId': !exists(json, 'ExternalCarrierId') ? undefined : json['ExternalCarrierId'],
        'pickupPoint': !exists(json, 'PickupPoint') ? undefined : json['PickupPoint'],
    };
}

export function OrderModelsShippingDetailToJSON(value?: OrderModelsShippingDetail | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.id,
        'ShippingId': value.shippingId,
        'Name': value.name,
        'ParcelNumber': value.parcelNumber,
        'ShippingDate': value.shippingDate === undefined ? undefined : (value.shippingDate.toISOString()),
        'TrackingUrl': value.trackingUrl,
        'ExternalDeliveryOptionId': value.externalDeliveryOptionId,
        'ExternalServiceId': value.externalServiceId,
        'ExternalCarrierId': value.externalCarrierId,
        'PickupPoint': value.pickupPoint,
    };
}

